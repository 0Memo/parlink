{"version":3,"file":"formik-COfibRyj.js","sources":["../../node_modules/formik/dist/formik.esm.js"],"sourcesContent":["import deepmerge from 'deepmerge';\nimport isPlainObject from 'lodash-es/isPlainObject';\nimport cloneDeep from 'lodash-es/cloneDeep';\nimport { createContext, useContext, Children, useRef, useEffect, useState, useCallback, useMemo, useImperativeHandle, createElement, useLayoutEffect, forwardRef, Component } from 'react';\nimport isEqual from 'react-fast-compare';\nimport invariant from 'tiny-warning';\nimport clone from 'lodash-es/clone';\nimport toPath from 'lodash-es/toPath';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar FormikContext = /*#__PURE__*/createContext(undefined);\nFormikContext.displayName = 'FormikContext';\nvar FormikProvider = FormikContext.Provider;\nvar FormikConsumer = FormikContext.Consumer;\nfunction useFormikContext() {\n  var formik = useContext(FormikContext);\n  !!!formik ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Formik context is undefined, please verify you are calling useFormikContext() as child of a <Formik> component.\") : invariant(false) : void 0;\n  return formik;\n}\n\n/** @private is the value an empty array? */\n\nvar isEmptyArray = function isEmptyArray(value) {\n  return Array.isArray(value) && value.length === 0;\n};\n/** @private is the given object a Function? */\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n/** @private is the given object an Object? */\n\nvar isObject = function isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n};\n/** @private is the given object an integer? */\n\nvar isInteger = function isInteger(obj) {\n  return String(Math.floor(Number(obj))) === obj;\n};\n/** @private is the given object a string? */\n\nvar isString = function isString(obj) {\n  return Object.prototype.toString.call(obj) === '[object String]';\n};\n/** @private is the given object a NaN? */\n// eslint-disable-next-line no-self-compare\n\nvar isNaN$1 = function isNaN(obj) {\n  return obj !== obj;\n};\n/** @private Does a React component have exactly 0 children? */\n\nvar isEmptyChildren = function isEmptyChildren(children) {\n  return Children.count(children) === 0;\n};\n/** @private is the given object/value a promise? */\n\nvar isPromise = function isPromise(value) {\n  return isObject(value) && isFunction(value.then);\n};\n/** @private is the given object/value a type of synthetic event? */\n\nvar isInputEvent = function isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n};\n/**\r\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\r\n * not safe to call document.activeElement if there is nothing focused.\r\n *\r\n * The activeElement will be null only if the document or document body is not\r\n * yet defined.\r\n *\r\n * @param {?Document} doc Defaults to current document.\r\n * @return {Element | null}\r\n * @see https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/dom/getActiveElement.js\r\n */\n\nfunction getActiveElement(doc) {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n/**\r\n * Deeply get a value from an object via its path.\r\n */\n\nfunction getIn(obj, key, def, p) {\n  if (p === void 0) {\n    p = 0;\n  }\n\n  var path = toPath(key);\n\n  while (obj && p < path.length) {\n    obj = obj[path[p++]];\n  } // check if path is not in the end\n\n\n  if (p !== path.length && !obj) {\n    return def;\n  }\n\n  return obj === undefined ? def : obj;\n}\n/**\r\n * Deeply set a value from in object via it's path. If the value at `path`\r\n * has changed, return a shallow copy of obj with `value` set at `path`.\r\n * If `value` has not changed, return the original `obj`.\r\n *\r\n * Existing objects / arrays along `path` are also shallow copied. Sibling\r\n * objects along path retain the same internal js reference. Since new\r\n * objects / arrays are only created along `path`, we can test if anything\r\n * changed in a nested structure by comparing the object's reference in\r\n * the old and new object, similar to how russian doll cache invalidation\r\n * works.\r\n *\r\n * In earlier versions of this function, which used cloneDeep, there were\r\n * issues whereby settings a nested value would mutate the parent\r\n * instead of creating a new object. `clone` avoids that bug making a\r\n * shallow copy of the objects along the update path\r\n * so no object is mutated in place.\r\n *\r\n * Before changing this function, please read through the following\r\n * discussions.\r\n *\r\n * @see https://github.com/developit/linkstate\r\n * @see https://github.com/jaredpalmer/formik/pull/123\r\n */\n\nfunction setIn(obj, path, value) {\n  var res = clone(obj); // this keeps inheritance when obj is a class\n\n  var resVal = res;\n  var i = 0;\n  var pathArray = toPath(path);\n\n  for (; i < pathArray.length - 1; i++) {\n    var currentPath = pathArray[i];\n    var currentObj = getIn(obj, pathArray.slice(0, i + 1));\n\n    if (currentObj && (isObject(currentObj) || Array.isArray(currentObj))) {\n      resVal = resVal[currentPath] = clone(currentObj);\n    } else {\n      var nextPath = pathArray[i + 1];\n      resVal = resVal[currentPath] = isInteger(nextPath) && Number(nextPath) >= 0 ? [] : {};\n    }\n  } // Return original object if new value is the same as current\n\n\n  if ((i === 0 ? obj : resVal)[pathArray[i]] === value) {\n    return obj;\n  }\n\n  if (value === undefined) {\n    delete resVal[pathArray[i]];\n  } else {\n    resVal[pathArray[i]] = value;\n  } // If the path array has a single element, the loop did not run.\n  // Deleting on `resVal` had no effect in this scenario, so we delete on the result instead.\n\n\n  if (i === 0 && value === undefined) {\n    delete res[pathArray[i]];\n  }\n\n  return res;\n}\n/**\r\n * Recursively a set the same value for all keys and arrays nested object, cloning\r\n * @param object\r\n * @param value\r\n * @param visited\r\n * @param response\r\n */\n\nfunction setNestedObjectValues(object, value, visited, response) {\n  if (visited === void 0) {\n    visited = new WeakMap();\n  }\n\n  if (response === void 0) {\n    response = {};\n  }\n\n  for (var _i = 0, _Object$keys = Object.keys(object); _i < _Object$keys.length; _i++) {\n    var k = _Object$keys[_i];\n    var val = object[k];\n\n    if (isObject(val)) {\n      if (!visited.get(val)) {\n        visited.set(val, true); // In order to keep array values consistent for both dot path  and\n        // bracket syntax, we need to check if this is an array so that\n        // this will output  { friends: [true] } and not { friends: { \"0\": true } }\n\n        response[k] = Array.isArray(val) ? [] : {};\n        setNestedObjectValues(val, value, visited, response[k]);\n      }\n    } else {\n      response[k] = value;\n    }\n  }\n\n  return response;\n}\n\nfunction formikReducer(state, msg) {\n  switch (msg.type) {\n    case 'SET_VALUES':\n      return _extends({}, state, {\n        values: msg.payload\n      });\n\n    case 'SET_TOUCHED':\n      return _extends({}, state, {\n        touched: msg.payload\n      });\n\n    case 'SET_ERRORS':\n      if (isEqual(state.errors, msg.payload)) {\n        return state;\n      }\n\n      return _extends({}, state, {\n        errors: msg.payload\n      });\n\n    case 'SET_STATUS':\n      return _extends({}, state, {\n        status: msg.payload\n      });\n\n    case 'SET_ISSUBMITTING':\n      return _extends({}, state, {\n        isSubmitting: msg.payload\n      });\n\n    case 'SET_ISVALIDATING':\n      return _extends({}, state, {\n        isValidating: msg.payload\n      });\n\n    case 'SET_FIELD_VALUE':\n      return _extends({}, state, {\n        values: setIn(state.values, msg.payload.field, msg.payload.value)\n      });\n\n    case 'SET_FIELD_TOUCHED':\n      return _extends({}, state, {\n        touched: setIn(state.touched, msg.payload.field, msg.payload.value)\n      });\n\n    case 'SET_FIELD_ERROR':\n      return _extends({}, state, {\n        errors: setIn(state.errors, msg.payload.field, msg.payload.value)\n      });\n\n    case 'RESET_FORM':\n      return _extends({}, state, msg.payload);\n\n    case 'SET_FORMIK_STATE':\n      return msg.payload(state);\n\n    case 'SUBMIT_ATTEMPT':\n      return _extends({}, state, {\n        touched: setNestedObjectValues(state.values, true),\n        isSubmitting: true,\n        submitCount: state.submitCount + 1\n      });\n\n    case 'SUBMIT_FAILURE':\n      return _extends({}, state, {\n        isSubmitting: false\n      });\n\n    case 'SUBMIT_SUCCESS':\n      return _extends({}, state, {\n        isSubmitting: false\n      });\n\n    default:\n      return state;\n  }\n} // Initial empty states // objects\n\n\nvar emptyErrors = {};\nvar emptyTouched = {};\nfunction useFormik(_ref) {\n  var _ref$validateOnChange = _ref.validateOnChange,\n      validateOnChange = _ref$validateOnChange === void 0 ? true : _ref$validateOnChange,\n      _ref$validateOnBlur = _ref.validateOnBlur,\n      validateOnBlur = _ref$validateOnBlur === void 0 ? true : _ref$validateOnBlur,\n      _ref$validateOnMount = _ref.validateOnMount,\n      validateOnMount = _ref$validateOnMount === void 0 ? false : _ref$validateOnMount,\n      isInitialValid = _ref.isInitialValid,\n      _ref$enableReinitiali = _ref.enableReinitialize,\n      enableReinitialize = _ref$enableReinitiali === void 0 ? false : _ref$enableReinitiali,\n      onSubmit = _ref.onSubmit,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"validateOnChange\", \"validateOnBlur\", \"validateOnMount\", \"isInitialValid\", \"enableReinitialize\", \"onSubmit\"]);\n\n  var props = _extends({\n    validateOnChange: validateOnChange,\n    validateOnBlur: validateOnBlur,\n    validateOnMount: validateOnMount,\n    onSubmit: onSubmit\n  }, rest);\n\n  var initialValues = useRef(props.initialValues);\n  var initialErrors = useRef(props.initialErrors || emptyErrors);\n  var initialTouched = useRef(props.initialTouched || emptyTouched);\n  var initialStatus = useRef(props.initialStatus);\n  var isMounted = useRef(false);\n  var fieldRegistry = useRef({});\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(function () {\n      !(typeof isInitialValid === 'undefined') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'isInitialValid has been deprecated and will be removed in future versions of Formik. Please use initialErrors or validateOnMount instead.') : invariant(false) : void 0; // eslint-disable-next-line\n    }, []);\n  }\n\n  useEffect(function () {\n    isMounted.current = true;\n    return function () {\n      isMounted.current = false;\n    };\n  }, []);\n\n  var _React$useState = useState(0),\n      setIteration = _React$useState[1];\n\n  var stateRef = useRef({\n    values: cloneDeep(props.initialValues),\n    errors: cloneDeep(props.initialErrors) || emptyErrors,\n    touched: cloneDeep(props.initialTouched) || emptyTouched,\n    status: cloneDeep(props.initialStatus),\n    isSubmitting: false,\n    isValidating: false,\n    submitCount: 0\n  });\n  var state = stateRef.current;\n  var dispatch = useCallback(function (action) {\n    var prev = stateRef.current;\n    stateRef.current = formikReducer(prev, action); // force rerender\n\n    if (prev !== stateRef.current) setIteration(function (x) {\n      return x + 1;\n    });\n  }, []);\n  var runValidateHandler = useCallback(function (values, field) {\n    return new Promise(function (resolve, reject) {\n      var maybePromisedErrors = props.validate(values, field);\n\n      if (maybePromisedErrors == null) {\n        // use loose null check here on purpose\n        resolve(emptyErrors);\n      } else if (isPromise(maybePromisedErrors)) {\n        maybePromisedErrors.then(function (errors) {\n          resolve(errors || emptyErrors);\n        }, function (actualException) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(\"Warning: An unhandled error was caught during validation in <Formik validate />\", actualException);\n          }\n\n          reject(actualException);\n        });\n      } else {\n        resolve(maybePromisedErrors);\n      }\n    });\n  }, [props.validate]);\n  /**\r\n   * Run validation against a Yup schema and optionally run a function if successful\r\n   */\n\n  var runValidationSchema = useCallback(function (values, field) {\n    var validationSchema = props.validationSchema;\n    var schema = isFunction(validationSchema) ? validationSchema(field) : validationSchema;\n    var promise = field && schema.validateAt ? schema.validateAt(field, values) : validateYupSchema(values, schema);\n    return new Promise(function (resolve, reject) {\n      promise.then(function () {\n        resolve(emptyErrors);\n      }, function (err) {\n        // Yup will throw a validation error if validation fails. We catch those and\n        // resolve them into Formik errors. We can sniff if something is a Yup error\n        // by checking error.name.\n        // @see https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n        if (err.name === 'ValidationError') {\n          resolve(yupToFormErrors(err));\n        } else {\n          // We throw any other errors\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(\"Warning: An unhandled error was caught during validation in <Formik validationSchema />\", err);\n          }\n\n          reject(err);\n        }\n      });\n    });\n  }, [props.validationSchema]);\n  var runSingleFieldLevelValidation = useCallback(function (field, value) {\n    return new Promise(function (resolve) {\n      return resolve(fieldRegistry.current[field].validate(value));\n    });\n  }, []);\n  var runFieldLevelValidations = useCallback(function (values) {\n    var fieldKeysWithValidation = Object.keys(fieldRegistry.current).filter(function (f) {\n      return isFunction(fieldRegistry.current[f].validate);\n    }); // Construct an array with all of the field validation functions\n\n    var fieldValidations = fieldKeysWithValidation.length > 0 ? fieldKeysWithValidation.map(function (f) {\n      return runSingleFieldLevelValidation(f, getIn(values, f));\n    }) : [Promise.resolve('DO_NOT_DELETE_YOU_WILL_BE_FIRED')]; // use special case ;)\n\n    return Promise.all(fieldValidations).then(function (fieldErrorsList) {\n      return fieldErrorsList.reduce(function (prev, curr, index) {\n        if (curr === 'DO_NOT_DELETE_YOU_WILL_BE_FIRED') {\n          return prev;\n        }\n\n        if (curr) {\n          prev = setIn(prev, fieldKeysWithValidation[index], curr);\n        }\n\n        return prev;\n      }, {});\n    });\n  }, [runSingleFieldLevelValidation]); // Run all validations and return the result\n\n  var runAllValidations = useCallback(function (values) {\n    return Promise.all([runFieldLevelValidations(values), props.validationSchema ? runValidationSchema(values) : {}, props.validate ? runValidateHandler(values) : {}]).then(function (_ref2) {\n      var fieldErrors = _ref2[0],\n          schemaErrors = _ref2[1],\n          validateErrors = _ref2[2];\n      var combinedErrors = deepmerge.all([fieldErrors, schemaErrors, validateErrors], {\n        arrayMerge: arrayMerge\n      });\n      return combinedErrors;\n    });\n  }, [props.validate, props.validationSchema, runFieldLevelValidations, runValidateHandler, runValidationSchema]); // Run all validations methods and update state accordingly\n\n  var validateFormWithHighPriority = useEventCallback(function (values) {\n    if (values === void 0) {\n      values = state.values;\n    }\n\n    dispatch({\n      type: 'SET_ISVALIDATING',\n      payload: true\n    });\n    return runAllValidations(values).then(function (combinedErrors) {\n      if (!!isMounted.current) {\n        dispatch({\n          type: 'SET_ISVALIDATING',\n          payload: false\n        });\n        dispatch({\n          type: 'SET_ERRORS',\n          payload: combinedErrors\n        });\n      }\n\n      return combinedErrors;\n    });\n  });\n  useEffect(function () {\n    if (validateOnMount && isMounted.current === true && isEqual(initialValues.current, props.initialValues)) {\n      validateFormWithHighPriority(initialValues.current);\n    }\n  }, [validateOnMount, validateFormWithHighPriority]);\n  var resetForm = useCallback(function (nextState) {\n    var values = nextState && nextState.values ? nextState.values : initialValues.current;\n    var errors = nextState && nextState.errors ? nextState.errors : initialErrors.current ? initialErrors.current : props.initialErrors || {};\n    var touched = nextState && nextState.touched ? nextState.touched : initialTouched.current ? initialTouched.current : props.initialTouched || {};\n    var status = nextState && nextState.status ? nextState.status : initialStatus.current ? initialStatus.current : props.initialStatus;\n    initialValues.current = values;\n    initialErrors.current = errors;\n    initialTouched.current = touched;\n    initialStatus.current = status;\n\n    var dispatchFn = function dispatchFn() {\n      dispatch({\n        type: 'RESET_FORM',\n        payload: {\n          isSubmitting: !!nextState && !!nextState.isSubmitting,\n          errors: errors,\n          touched: touched,\n          status: status,\n          values: values,\n          isValidating: !!nextState && !!nextState.isValidating,\n          submitCount: !!nextState && !!nextState.submitCount && typeof nextState.submitCount === 'number' ? nextState.submitCount : 0\n        }\n      });\n    };\n\n    if (props.onReset) {\n      var maybePromisedOnReset = props.onReset(state.values, imperativeMethods);\n\n      if (isPromise(maybePromisedOnReset)) {\n        maybePromisedOnReset.then(dispatchFn);\n      } else {\n        dispatchFn();\n      }\n    } else {\n      dispatchFn();\n    }\n  }, [props.initialErrors, props.initialStatus, props.initialTouched, props.onReset]);\n  useEffect(function () {\n    if (isMounted.current === true && !isEqual(initialValues.current, props.initialValues)) {\n      if (enableReinitialize) {\n        initialValues.current = props.initialValues;\n        resetForm();\n\n        if (validateOnMount) {\n          validateFormWithHighPriority(initialValues.current);\n        }\n      }\n    }\n  }, [enableReinitialize, props.initialValues, resetForm, validateOnMount, validateFormWithHighPriority]);\n  useEffect(function () {\n    if (enableReinitialize && isMounted.current === true && !isEqual(initialErrors.current, props.initialErrors)) {\n      initialErrors.current = props.initialErrors || emptyErrors;\n      dispatch({\n        type: 'SET_ERRORS',\n        payload: props.initialErrors || emptyErrors\n      });\n    }\n  }, [enableReinitialize, props.initialErrors]);\n  useEffect(function () {\n    if (enableReinitialize && isMounted.current === true && !isEqual(initialTouched.current, props.initialTouched)) {\n      initialTouched.current = props.initialTouched || emptyTouched;\n      dispatch({\n        type: 'SET_TOUCHED',\n        payload: props.initialTouched || emptyTouched\n      });\n    }\n  }, [enableReinitialize, props.initialTouched]);\n  useEffect(function () {\n    if (enableReinitialize && isMounted.current === true && !isEqual(initialStatus.current, props.initialStatus)) {\n      initialStatus.current = props.initialStatus;\n      dispatch({\n        type: 'SET_STATUS',\n        payload: props.initialStatus\n      });\n    }\n  }, [enableReinitialize, props.initialStatus, props.initialTouched]);\n  var validateField = useEventCallback(function (name) {\n    // This will efficiently validate a single field by avoiding state\n    // changes if the validation function is synchronous. It's different from\n    // what is called when using validateForm.\n    if (fieldRegistry.current[name] && isFunction(fieldRegistry.current[name].validate)) {\n      var value = getIn(state.values, name);\n      var maybePromise = fieldRegistry.current[name].validate(value);\n\n      if (isPromise(maybePromise)) {\n        // Only flip isValidating if the function is async.\n        dispatch({\n          type: 'SET_ISVALIDATING',\n          payload: true\n        });\n        return maybePromise.then(function (x) {\n          return x;\n        }).then(function (error) {\n          dispatch({\n            type: 'SET_FIELD_ERROR',\n            payload: {\n              field: name,\n              value: error\n            }\n          });\n          dispatch({\n            type: 'SET_ISVALIDATING',\n            payload: false\n          });\n        });\n      } else {\n        dispatch({\n          type: 'SET_FIELD_ERROR',\n          payload: {\n            field: name,\n            value: maybePromise\n          }\n        });\n        return Promise.resolve(maybePromise);\n      }\n    } else if (props.validationSchema) {\n      dispatch({\n        type: 'SET_ISVALIDATING',\n        payload: true\n      });\n      return runValidationSchema(state.values, name).then(function (x) {\n        return x;\n      }).then(function (error) {\n        dispatch({\n          type: 'SET_FIELD_ERROR',\n          payload: {\n            field: name,\n            value: getIn(error, name)\n          }\n        });\n        dispatch({\n          type: 'SET_ISVALIDATING',\n          payload: false\n        });\n      });\n    }\n\n    return Promise.resolve();\n  });\n  var registerField = useCallback(function (name, _ref3) {\n    var validate = _ref3.validate;\n    fieldRegistry.current[name] = {\n      validate: validate\n    };\n  }, []);\n  var unregisterField = useCallback(function (name) {\n    delete fieldRegistry.current[name];\n  }, []);\n  var setTouched = useEventCallback(function (touched, shouldValidate) {\n    dispatch({\n      type: 'SET_TOUCHED',\n      payload: touched\n    });\n    var willValidate = shouldValidate === undefined ? validateOnBlur : shouldValidate;\n    return willValidate ? validateFormWithHighPriority(state.values) : Promise.resolve();\n  });\n  var setErrors = useCallback(function (errors) {\n    dispatch({\n      type: 'SET_ERRORS',\n      payload: errors\n    });\n  }, []);\n  var setValues = useEventCallback(function (values, shouldValidate) {\n    var resolvedValues = isFunction(values) ? values(state.values) : values;\n    dispatch({\n      type: 'SET_VALUES',\n      payload: resolvedValues\n    });\n    var willValidate = shouldValidate === undefined ? validateOnChange : shouldValidate;\n    return willValidate ? validateFormWithHighPriority(resolvedValues) : Promise.resolve();\n  });\n  var setFieldError = useCallback(function (field, value) {\n    dispatch({\n      type: 'SET_FIELD_ERROR',\n      payload: {\n        field: field,\n        value: value\n      }\n    });\n  }, []);\n  var setFieldValue = useEventCallback(function (field, value, shouldValidate) {\n    dispatch({\n      type: 'SET_FIELD_VALUE',\n      payload: {\n        field: field,\n        value: value\n      }\n    });\n    var willValidate = shouldValidate === undefined ? validateOnChange : shouldValidate;\n    return willValidate ? validateFormWithHighPriority(setIn(state.values, field, value)) : Promise.resolve();\n  });\n  var executeChange = useCallback(function (eventOrTextValue, maybePath) {\n    // By default, assume that the first argument is a string. This allows us to use\n    // handleChange with React Native and React Native Web's onChangeText prop which\n    // provides just the value of the input.\n    var field = maybePath;\n    var val = eventOrTextValue;\n    var parsed; // If the first argument is not a string though, it has to be a synthetic React Event (or a fake one),\n    // so we handle like we would a normal HTML change event.\n\n    if (!isString(eventOrTextValue)) {\n      // If we can, persist the event\n      // @see https://reactjs.org/docs/events.html#event-pooling\n      if (eventOrTextValue.persist) {\n        eventOrTextValue.persist();\n      }\n\n      var target = eventOrTextValue.target ? eventOrTextValue.target : eventOrTextValue.currentTarget;\n      var type = target.type,\n          name = target.name,\n          id = target.id,\n          value = target.value,\n          checked = target.checked,\n          outerHTML = target.outerHTML,\n          options = target.options,\n          multiple = target.multiple;\n      field = maybePath ? maybePath : name ? name : id;\n\n      if (!field && process.env.NODE_ENV !== \"production\") {\n        warnAboutMissingIdentifier({\n          htmlContent: outerHTML,\n          documentationAnchorLink: 'handlechange-e-reactchangeeventany--void',\n          handlerName: 'handleChange'\n        });\n      }\n\n      val = /number|range/.test(type) ? (parsed = parseFloat(value), isNaN(parsed) ? '' : parsed) : /checkbox/.test(type) // checkboxes\n      ? getValueForCheckbox(getIn(state.values, field), checked, value) : options && multiple // <select multiple>\n      ? getSelectedValues(options) : value;\n    }\n\n    if (field) {\n      // Set form fields by name\n      setFieldValue(field, val);\n    }\n  }, [setFieldValue, state.values]);\n  var handleChange = useEventCallback(function (eventOrPath) {\n    if (isString(eventOrPath)) {\n      return function (event) {\n        return executeChange(event, eventOrPath);\n      };\n    } else {\n      executeChange(eventOrPath);\n    }\n  });\n  var setFieldTouched = useEventCallback(function (field, touched, shouldValidate) {\n    if (touched === void 0) {\n      touched = true;\n    }\n\n    dispatch({\n      type: 'SET_FIELD_TOUCHED',\n      payload: {\n        field: field,\n        value: touched\n      }\n    });\n    var willValidate = shouldValidate === undefined ? validateOnBlur : shouldValidate;\n    return willValidate ? validateFormWithHighPriority(state.values) : Promise.resolve();\n  });\n  var executeBlur = useCallback(function (e, path) {\n    if (e.persist) {\n      e.persist();\n    }\n\n    var _e$target = e.target,\n        name = _e$target.name,\n        id = _e$target.id,\n        outerHTML = _e$target.outerHTML;\n    var field = path ? path : name ? name : id;\n\n    if (!field && process.env.NODE_ENV !== \"production\") {\n      warnAboutMissingIdentifier({\n        htmlContent: outerHTML,\n        documentationAnchorLink: 'handleblur-e-any--void',\n        handlerName: 'handleBlur'\n      });\n    }\n\n    setFieldTouched(field, true);\n  }, [setFieldTouched]);\n  var handleBlur = useEventCallback(function (eventOrString) {\n    if (isString(eventOrString)) {\n      return function (event) {\n        return executeBlur(event, eventOrString);\n      };\n    } else {\n      executeBlur(eventOrString);\n    }\n  });\n  var setFormikState = useCallback(function (stateOrCb) {\n    if (isFunction(stateOrCb)) {\n      dispatch({\n        type: 'SET_FORMIK_STATE',\n        payload: stateOrCb\n      });\n    } else {\n      dispatch({\n        type: 'SET_FORMIK_STATE',\n        payload: function payload() {\n          return stateOrCb;\n        }\n      });\n    }\n  }, []);\n  var setStatus = useCallback(function (status) {\n    dispatch({\n      type: 'SET_STATUS',\n      payload: status\n    });\n  }, []);\n  var setSubmitting = useCallback(function (isSubmitting) {\n    dispatch({\n      type: 'SET_ISSUBMITTING',\n      payload: isSubmitting\n    });\n  }, []);\n  var submitForm = useEventCallback(function () {\n    dispatch({\n      type: 'SUBMIT_ATTEMPT'\n    });\n    return validateFormWithHighPriority().then(function (combinedErrors) {\n      // In case an error was thrown and passed to the resolved Promise,\n      // `combinedErrors` can be an instance of an Error. We need to check\n      // that and abort the submit.\n      // If we don't do that, calling `Object.keys(new Error())` yields an\n      // empty array, which causes the validation to pass and the form\n      // to be submitted.\n      var isInstanceOfError = combinedErrors instanceof Error;\n      var isActuallyValid = !isInstanceOfError && Object.keys(combinedErrors).length === 0;\n\n      if (isActuallyValid) {\n        // Proceed with submit...\n        //\n        // To respect sync submit fns, we can't simply wrap executeSubmit in a promise and\n        // _always_ dispatch SUBMIT_SUCCESS because isSubmitting would then always be false.\n        // This would be fine in simple cases, but make it impossible to disable submit\n        // buttons where people use callbacks or promises as side effects (which is basically\n        // all of v1 Formik code). Instead, recall that we are inside of a promise chain already,\n        //  so we can try/catch executeSubmit(), if it returns undefined, then just bail.\n        // If there are errors, throw em. Otherwise, wrap executeSubmit in a promise and handle\n        // cleanup of isSubmitting on behalf of the consumer.\n        var promiseOrUndefined;\n\n        try {\n          promiseOrUndefined = executeSubmit(); // Bail if it's sync, consumer is responsible for cleaning up\n          // via setSubmitting(false)\n\n          if (promiseOrUndefined === undefined) {\n            return;\n          }\n        } catch (error) {\n          throw error;\n        }\n\n        return Promise.resolve(promiseOrUndefined).then(function (result) {\n          if (!!isMounted.current) {\n            dispatch({\n              type: 'SUBMIT_SUCCESS'\n            });\n          }\n\n          return result;\n        })[\"catch\"](function (_errors) {\n          if (!!isMounted.current) {\n            dispatch({\n              type: 'SUBMIT_FAILURE'\n            }); // This is a legit error rejected by the onSubmit fn\n            // so we don't want to break the promise chain\n\n            throw _errors;\n          }\n        });\n      } else if (!!isMounted.current) {\n        // ^^^ Make sure Formik is still mounted before updating state\n        dispatch({\n          type: 'SUBMIT_FAILURE'\n        }); // throw combinedErrors;\n\n        if (isInstanceOfError) {\n          throw combinedErrors;\n        }\n      }\n\n      return;\n    });\n  });\n  var handleSubmit = useEventCallback(function (e) {\n    if (e && e.preventDefault && isFunction(e.preventDefault)) {\n      e.preventDefault();\n    }\n\n    if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n      e.stopPropagation();\n    } // Warn if form submission is triggered by a <button> without a\n    // specified `type` attribute during development. This mitigates\n    // a common gotcha in forms with both reset and submit buttons,\n    // where the dev forgets to add type=\"button\" to the reset button.\n\n\n    if (process.env.NODE_ENV !== \"production\" && typeof document !== 'undefined') {\n      // Safely get the active element (works with IE)\n      var activeElement = getActiveElement();\n\n      if (activeElement !== null && activeElement instanceof HTMLButtonElement) {\n        !(activeElement.attributes && activeElement.attributes.getNamedItem('type')) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You submitted a Formik form using a button with an unspecified `type` attribute.  Most browsers default button elements to `type=\"submit\"`. If this is not a submit button, please add `type=\"button\"`.') : invariant(false) : void 0;\n      }\n    }\n\n    submitForm()[\"catch\"](function (reason) {\n      console.warn(\"Warning: An unhandled error was caught from submitForm()\", reason);\n    });\n  });\n  var imperativeMethods = {\n    resetForm: resetForm,\n    validateForm: validateFormWithHighPriority,\n    validateField: validateField,\n    setErrors: setErrors,\n    setFieldError: setFieldError,\n    setFieldTouched: setFieldTouched,\n    setFieldValue: setFieldValue,\n    setStatus: setStatus,\n    setSubmitting: setSubmitting,\n    setTouched: setTouched,\n    setValues: setValues,\n    setFormikState: setFormikState,\n    submitForm: submitForm\n  };\n  var executeSubmit = useEventCallback(function () {\n    return onSubmit(state.values, imperativeMethods);\n  });\n  var handleReset = useEventCallback(function (e) {\n    if (e && e.preventDefault && isFunction(e.preventDefault)) {\n      e.preventDefault();\n    }\n\n    if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n      e.stopPropagation();\n    }\n\n    resetForm();\n  });\n  var getFieldMeta = useCallback(function (name) {\n    return {\n      value: getIn(state.values, name),\n      error: getIn(state.errors, name),\n      touched: !!getIn(state.touched, name),\n      initialValue: getIn(initialValues.current, name),\n      initialTouched: !!getIn(initialTouched.current, name),\n      initialError: getIn(initialErrors.current, name)\n    };\n  }, [state.errors, state.touched, state.values]);\n  var getFieldHelpers = useCallback(function (name) {\n    return {\n      setValue: function setValue(value, shouldValidate) {\n        return setFieldValue(name, value, shouldValidate);\n      },\n      setTouched: function setTouched(value, shouldValidate) {\n        return setFieldTouched(name, value, shouldValidate);\n      },\n      setError: function setError(value) {\n        return setFieldError(name, value);\n      }\n    };\n  }, [setFieldValue, setFieldTouched, setFieldError]);\n  var getFieldProps = useCallback(function (nameOrOptions) {\n    var isAnObject = isObject(nameOrOptions);\n    var name = isAnObject ? nameOrOptions.name : nameOrOptions;\n    var valueState = getIn(state.values, name);\n    var field = {\n      name: name,\n      value: valueState,\n      onChange: handleChange,\n      onBlur: handleBlur\n    };\n\n    if (isAnObject) {\n      var type = nameOrOptions.type,\n          valueProp = nameOrOptions.value,\n          is = nameOrOptions.as,\n          multiple = nameOrOptions.multiple;\n\n      if (type === 'checkbox') {\n        if (valueProp === undefined) {\n          field.checked = !!valueState;\n        } else {\n          field.checked = !!(Array.isArray(valueState) && ~valueState.indexOf(valueProp));\n          field.value = valueProp;\n        }\n      } else if (type === 'radio') {\n        field.checked = valueState === valueProp;\n        field.value = valueProp;\n      } else if (is === 'select' && multiple) {\n        field.value = field.value || [];\n        field.multiple = true;\n      }\n    }\n\n    return field;\n  }, [handleBlur, handleChange, state.values]);\n  var dirty = useMemo(function () {\n    return !isEqual(initialValues.current, state.values);\n  }, [initialValues.current, state.values]);\n  var isValid = useMemo(function () {\n    return typeof isInitialValid !== 'undefined' ? dirty ? state.errors && Object.keys(state.errors).length === 0 : isInitialValid !== false && isFunction(isInitialValid) ? isInitialValid(props) : isInitialValid : state.errors && Object.keys(state.errors).length === 0;\n  }, [isInitialValid, dirty, state.errors, props]);\n\n  var ctx = _extends({}, state, {\n    initialValues: initialValues.current,\n    initialErrors: initialErrors.current,\n    initialTouched: initialTouched.current,\n    initialStatus: initialStatus.current,\n    handleBlur: handleBlur,\n    handleChange: handleChange,\n    handleReset: handleReset,\n    handleSubmit: handleSubmit,\n    resetForm: resetForm,\n    setErrors: setErrors,\n    setFormikState: setFormikState,\n    setFieldTouched: setFieldTouched,\n    setFieldValue: setFieldValue,\n    setFieldError: setFieldError,\n    setStatus: setStatus,\n    setSubmitting: setSubmitting,\n    setTouched: setTouched,\n    setValues: setValues,\n    submitForm: submitForm,\n    validateForm: validateFormWithHighPriority,\n    validateField: validateField,\n    isValid: isValid,\n    dirty: dirty,\n    unregisterField: unregisterField,\n    registerField: registerField,\n    getFieldProps: getFieldProps,\n    getFieldMeta: getFieldMeta,\n    getFieldHelpers: getFieldHelpers,\n    validateOnBlur: validateOnBlur,\n    validateOnChange: validateOnChange,\n    validateOnMount: validateOnMount\n  });\n\n  return ctx;\n}\nfunction Formik(props) {\n  var formikbag = useFormik(props);\n  var component = props.component,\n      children = props.children,\n      render = props.render,\n      innerRef = props.innerRef; // This allows folks to pass a ref to <Formik />\n\n  useImperativeHandle(innerRef, function () {\n    return formikbag;\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(function () {\n      !!props.render ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<Formik render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Formik render={(props) => ...} /> with <Formik>{(props) => ...}</Formik>\") : invariant(false) : void 0; // eslint-disable-next-line\n    }, []);\n  }\n\n  return createElement(FormikProvider, {\n    value: formikbag\n  }, component ? createElement(component, formikbag) : render ? render(formikbag) : children // children come last, always called\n  ? isFunction(children) ? children(formikbag) : !isEmptyChildren(children) ? Children.only(children) : null : null);\n}\n\nfunction warnAboutMissingIdentifier(_ref4) {\n  var htmlContent = _ref4.htmlContent,\n      documentationAnchorLink = _ref4.documentationAnchorLink,\n      handlerName = _ref4.handlerName;\n  console.warn(\"Warning: Formik called `\" + handlerName + \"`, but you forgot to pass an `id` or `name` attribute to your input:\\n    \" + htmlContent + \"\\n    Formik cannot determine which value to update. For more info see https://formik.org/docs/api/formik#\" + documentationAnchorLink + \"\\n  \");\n}\n/**\r\n * Transform Yup ValidationError to a more usable object\r\n */\n\n\nfunction yupToFormErrors(yupError) {\n  var errors = {};\n\n  if (yupError.inner) {\n    if (yupError.inner.length === 0) {\n      return setIn(errors, yupError.path, yupError.message);\n    }\n\n    for (var _iterator = yupError.inner, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref5;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref5 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref5 = _i.value;\n      }\n\n      var err = _ref5;\n\n      if (!getIn(errors, err.path)) {\n        errors = setIn(errors, err.path, err.message);\n      }\n    }\n  }\n\n  return errors;\n}\n/**\r\n * Validate a yup schema.\r\n */\n\nfunction validateYupSchema(values, schema, sync, context) {\n  if (sync === void 0) {\n    sync = false;\n  }\n\n  var normalizedValues = prepareDataForValidation(values);\n  return schema[sync ? 'validateSync' : 'validate'](normalizedValues, {\n    abortEarly: false,\n    context: context || normalizedValues\n  });\n}\n/**\r\n * Recursively prepare values.\r\n */\n\nfunction prepareDataForValidation(values) {\n  var data = Array.isArray(values) ? [] : {};\n\n  for (var k in values) {\n    if (Object.prototype.hasOwnProperty.call(values, k)) {\n      var key = String(k);\n\n      if (Array.isArray(values[key]) === true) {\n        data[key] = values[key].map(function (value) {\n          if (Array.isArray(value) === true || isPlainObject(value)) {\n            return prepareDataForValidation(value);\n          } else {\n            return value !== '' ? value : undefined;\n          }\n        });\n      } else if (isPlainObject(values[key])) {\n        data[key] = prepareDataForValidation(values[key]);\n      } else {\n        data[key] = values[key] !== '' ? values[key] : undefined;\n      }\n    }\n  }\n\n  return data;\n}\n/**\r\n * deepmerge array merging algorithm\r\n * https://github.com/KyleAMathews/deepmerge#combine-array\r\n */\n\nfunction arrayMerge(target, source, options) {\n  var destination = target.slice();\n  source.forEach(function merge(e, i) {\n    if (typeof destination[i] === 'undefined') {\n      var cloneRequested = options.clone !== false;\n      var shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone ? deepmerge(Array.isArray(e) ? [] : {}, e, options) : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = deepmerge(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n}\n/** Return multi select values based on an array of options */\n\n\nfunction getSelectedValues(options) {\n  return Array.from(options).filter(function (el) {\n    return el.selected;\n  }).map(function (el) {\n    return el.value;\n  });\n}\n/** Return the next value for a checkbox */\n\n\nfunction getValueForCheckbox(currentValue, checked, valueProp) {\n  // If the current value was a boolean, return a boolean\n  if (typeof currentValue === 'boolean') {\n    return Boolean(checked);\n  } // If the currentValue was not a boolean we want to return an array\n\n\n  var currentArrayOfValues = [];\n  var isValueInArray = false;\n  var index = -1;\n\n  if (!Array.isArray(currentValue)) {\n    // eslint-disable-next-line eqeqeq\n    if (!valueProp || valueProp == 'true' || valueProp == 'false') {\n      return Boolean(checked);\n    }\n  } else {\n    // If the current value is already an array, use it\n    currentArrayOfValues = currentValue;\n    index = currentValue.indexOf(valueProp);\n    isValueInArray = index >= 0;\n  } // If the checkbox was checked and the value is not already present in the aray we want to add the new value to the array of values\n\n\n  if (checked && valueProp && !isValueInArray) {\n    return currentArrayOfValues.concat(valueProp);\n  } // If the checkbox was unchecked and the value is not in the array, simply return the already existing array of values\n\n\n  if (!isValueInArray) {\n    return currentArrayOfValues;\n  } // If the checkbox was unchecked and the value is in the array, remove the value and return the array\n\n\n  return currentArrayOfValues.slice(0, index).concat(currentArrayOfValues.slice(index + 1));\n} // React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\n// @see https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n\n\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? useLayoutEffect : useEffect;\n\nfunction useEventCallback(fn) {\n  var ref = useRef(fn); // we copy a ref to the callback scoped to the current state/props on each render\n\n  useIsomorphicLayoutEffect(function () {\n    ref.current = fn;\n  });\n  return useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return ref.current.apply(void 0, args);\n  }, []);\n}\n\nfunction useField(propsOrFieldName) {\n  var formik = useFormikContext();\n  var getFieldProps = formik.getFieldProps,\n      getFieldMeta = formik.getFieldMeta,\n      getFieldHelpers = formik.getFieldHelpers,\n      registerField = formik.registerField,\n      unregisterField = formik.unregisterField;\n  var isAnObject = isObject(propsOrFieldName); // Normalize propsOrFieldName to FieldHookConfig<Val>\n\n  var props = isAnObject ? propsOrFieldName : {\n    name: propsOrFieldName\n  };\n  var fieldName = props.name,\n      validateFn = props.validate;\n  useEffect(function () {\n    if (fieldName) {\n      registerField(fieldName, {\n        validate: validateFn\n      });\n    }\n\n    return function () {\n      if (fieldName) {\n        unregisterField(fieldName);\n      }\n    };\n  }, [registerField, unregisterField, fieldName, validateFn]);\n\n  if (process.env.NODE_ENV !== \"production\") {\n    !formik ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'useField() / <Field /> must be used underneath a <Formik> component or withFormik() higher order component') : invariant(false) : void 0;\n  }\n\n  !fieldName ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Invalid field name. Either pass `useField` a string or an object containing a `name` key.') : invariant(false) : void 0;\n  var fieldHelpers = useMemo(function () {\n    return getFieldHelpers(fieldName);\n  }, [getFieldHelpers, fieldName]);\n  return [getFieldProps(props), getFieldMeta(fieldName), fieldHelpers];\n}\nfunction Field(_ref) {\n  var validate = _ref.validate,\n      name = _ref.name,\n      render = _ref.render,\n      children = _ref.children,\n      is = _ref.as,\n      component = _ref.component,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"validate\", \"name\", \"render\", \"children\", \"as\", \"component\", \"className\"]);\n\n  var _useFormikContext = useFormikContext(),\n      formik = _objectWithoutPropertiesLoose(_useFormikContext, [\"validate\", \"validationSchema\"]);\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(function () {\n      !!render ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<Field render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Field name=\\\"\" + name + \"\\\" render={({field, form}) => ...} /> with <Field name=\\\"\" + name + \"\\\">{({field, form, meta}) => ...}</Field>\") : invariant(false) : void 0;\n      !!(is && children && isFunction(children)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You should not use <Field as> and <Field children> as a function in the same <Field> component; <Field as> will be ignored.') : invariant(false) : void 0;\n      !!(component && children && isFunction(children)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You should not use <Field component> and <Field children> as a function in the same <Field> component; <Field component> will be ignored.') : invariant(false) : void 0;\n      !!(render && children && !isEmptyChildren(children)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You should not use <Field render> and <Field children> in the same <Field> component; <Field children> will be ignored') : invariant(false) : void 0; // eslint-disable-next-line\n    }, []);\n  } // Register field and field-level validation with parent <Formik>\n\n\n  var registerField = formik.registerField,\n      unregisterField = formik.unregisterField;\n  useEffect(function () {\n    registerField(name, {\n      validate: validate\n    });\n    return function () {\n      unregisterField(name);\n    };\n  }, [registerField, unregisterField, name, validate]);\n  var field = formik.getFieldProps(_extends({\n    name: name\n  }, props));\n  var meta = formik.getFieldMeta(name);\n  var legacyBag = {\n    field: field,\n    form: formik\n  };\n\n  if (render) {\n    return render(_extends({}, legacyBag, {\n      meta: meta\n    }));\n  }\n\n  if (isFunction(children)) {\n    return children(_extends({}, legacyBag, {\n      meta: meta\n    }));\n  }\n\n  if (component) {\n    // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n    if (typeof component === 'string') {\n      var innerRef = props.innerRef,\n          rest = _objectWithoutPropertiesLoose(props, [\"innerRef\"]);\n\n      return createElement(component, _extends({\n        ref: innerRef\n      }, field, rest, {\n        className: className\n      }), children);\n    } // We don't pass `meta` for backwards compat\n\n\n    return createElement(component, _extends({\n      field: field,\n      form: formik\n    }, props, {\n      className: className\n    }), children);\n  } // default to input here so we can check for both `as` and `children` above\n\n\n  var asElement = is || 'input';\n\n  if (typeof asElement === 'string') {\n    var _innerRef = props.innerRef,\n        _rest = _objectWithoutPropertiesLoose(props, [\"innerRef\"]);\n\n    return createElement(asElement, _extends({\n      ref: _innerRef\n    }, field, _rest, {\n      className: className\n    }), children);\n  }\n\n  return createElement(asElement, _extends({}, field, props, {\n    className: className\n  }), children);\n}\n\nvar Form = /*#__PURE__*/forwardRef(function (props, ref) {\n  // iOS needs an \"action\" attribute for nice input: https://stackoverflow.com/a/39485162/406725\n  // We default the action to \"#\" in case the preventDefault fails (just updates the URL hash)\n  var action = props.action,\n      rest = _objectWithoutPropertiesLoose(props, [\"action\"]);\n\n  var _action = action != null ? action : '#';\n\n  var _useFormikContext = useFormikContext(),\n      handleReset = _useFormikContext.handleReset,\n      handleSubmit = _useFormikContext.handleSubmit;\n\n  return createElement(\"form\", _extends({\n    onSubmit: handleSubmit,\n    ref: ref,\n    onReset: handleReset,\n    action: _action\n  }, rest));\n});\nForm.displayName = 'Form';\n\n/**\r\n * A public higher-order component to access the imperative API\r\n */\n\nfunction withFormik(_ref) {\n  var _ref$mapPropsToValues = _ref.mapPropsToValues,\n      mapPropsToValues = _ref$mapPropsToValues === void 0 ? function (vanillaProps) {\n    var val = {};\n\n    for (var k in vanillaProps) {\n      if (vanillaProps.hasOwnProperty(k) && typeof vanillaProps[k] !== 'function') {\n        // @todo TypeScript fix\n        val[k] = vanillaProps[k];\n      }\n    }\n\n    return val;\n  } : _ref$mapPropsToValues,\n      config = _objectWithoutPropertiesLoose(_ref, [\"mapPropsToValues\"]);\n\n  return function createFormik(Component$1) {\n    var componentDisplayName = Component$1.displayName || Component$1.name || Component$1.constructor && Component$1.constructor.name || 'Component';\n    /**\r\n     * We need to use closures here for to provide the wrapped component's props to\r\n     * the respective withFormik config methods.\r\n     */\n\n    var C = /*#__PURE__*/function (_React$Component) {\n      _inheritsLoose(C, _React$Component);\n\n      function C() {\n        var _this;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n        _this.validate = function (values) {\n          return config.validate(values, _this.props);\n        };\n\n        _this.validationSchema = function () {\n          return isFunction(config.validationSchema) ? config.validationSchema(_this.props) : config.validationSchema;\n        };\n\n        _this.handleSubmit = function (values, actions) {\n          return config.handleSubmit(values, _extends({}, actions, {\n            props: _this.props\n          }));\n        };\n\n        _this.renderFormComponent = function (formikProps) {\n          return createElement(Component$1, _extends({}, _this.props, formikProps));\n        };\n\n        return _this;\n      }\n\n      var _proto = C.prototype;\n\n      _proto.render = function render() {\n        var _this$props = this.props,\n            props = _objectWithoutPropertiesLoose(_this$props, [\"children\"]);\n\n        return createElement(Formik, _extends({}, props, config, {\n          validate: config.validate && this.validate,\n          validationSchema: config.validationSchema && this.validationSchema,\n          initialValues: mapPropsToValues(this.props),\n          initialStatus: config.mapPropsToStatus && config.mapPropsToStatus(this.props),\n          initialErrors: config.mapPropsToErrors && config.mapPropsToErrors(this.props),\n          initialTouched: config.mapPropsToTouched && config.mapPropsToTouched(this.props),\n          onSubmit: this.handleSubmit,\n          children: this.renderFormComponent\n        }));\n      };\n\n      return C;\n    }(Component);\n\n    C.displayName = \"WithFormik(\" + componentDisplayName + \")\";\n    return hoistNonReactStatics(C, Component$1 // cast type to ComponentClass (even if SFC)\n    );\n  };\n}\n\n/**\r\n * Connect any component to Formik context, and inject as a prop called `formik`;\r\n * @param Comp React Component\r\n */\n\nfunction connect(Comp) {\n  var C = function C(props) {\n    return createElement(FormikConsumer, null, function (formik) {\n      !!!formik ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Formik context is undefined, please verify you are rendering <Form>, <Field>, <FastField>, <FieldArray>, or your custom context-using component as a child of a <Formik> component. Component name: \" + Comp.name) : invariant(false) : void 0;\n      return createElement(Comp, _extends({}, props, {\n        formik: formik\n      }));\n    });\n  };\n\n  var componentDisplayName = Comp.displayName || Comp.name || Comp.constructor && Comp.constructor.name || 'Component'; // Assign Comp to C.WrappedComponent so we can access the inner component in tests\n  // For example, <Field.WrappedComponent /> gets us <FieldInner/>\n\n  C.WrappedComponent = Comp;\n  C.displayName = \"FormikConnect(\" + componentDisplayName + \")\";\n  return hoistNonReactStatics(C, Comp // cast type to ComponentClass (even if SFC)\n  );\n}\n\n/**\r\n * Some array helpers!\r\n */\n\nvar move = function move(array, from, to) {\n  var copy = copyArrayLike(array);\n  var value = copy[from];\n  copy.splice(from, 1);\n  copy.splice(to, 0, value);\n  return copy;\n};\nvar swap = function swap(arrayLike, indexA, indexB) {\n  var copy = copyArrayLike(arrayLike);\n  var a = copy[indexA];\n  copy[indexA] = copy[indexB];\n  copy[indexB] = a;\n  return copy;\n};\nvar insert = function insert(arrayLike, index, value) {\n  var copy = copyArrayLike(arrayLike);\n  copy.splice(index, 0, value);\n  return copy;\n};\nvar replace = function replace(arrayLike, index, value) {\n  var copy = copyArrayLike(arrayLike);\n  copy[index] = value;\n  return copy;\n};\n\nvar copyArrayLike = function copyArrayLike(arrayLike) {\n  if (!arrayLike) {\n    return [];\n  } else if (Array.isArray(arrayLike)) {\n    return [].concat(arrayLike);\n  } else {\n    var maxIndex = Object.keys(arrayLike).map(function (key) {\n      return parseInt(key);\n    }).reduce(function (max, el) {\n      return el > max ? el : max;\n    }, 0);\n    return Array.from(_extends({}, arrayLike, {\n      length: maxIndex + 1\n    }));\n  }\n};\n\nvar createAlterationHandler = function createAlterationHandler(alteration, defaultFunction) {\n  var fn = typeof alteration === 'function' ? alteration : defaultFunction;\n  return function (data) {\n    if (Array.isArray(data) || isObject(data)) {\n      var clone = copyArrayLike(data);\n      return fn(clone);\n    } // This can be assumed to be a primitive, which\n    // is a case for top level validation errors\n\n\n    return data;\n  };\n};\n\nvar FieldArrayInner = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(FieldArrayInner, _React$Component);\n\n  function FieldArrayInner(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this; // We need TypeScript generics on these, so we'll bind them in the constructor\n    // @todo Fix TS 3.2.1\n\n    _this.updateArrayField = function (fn, alterTouched, alterErrors) {\n      var _this$props = _this.props,\n          name = _this$props.name,\n          setFormikState = _this$props.formik.setFormikState;\n      setFormikState(function (prevState) {\n        var updateErrors = createAlterationHandler(alterErrors, fn);\n        var updateTouched = createAlterationHandler(alterTouched, fn); // values fn should be executed before updateErrors and updateTouched,\n        // otherwise it causes an error with unshift.\n\n        var values = setIn(prevState.values, name, fn(getIn(prevState.values, name)));\n        var fieldError = alterErrors ? updateErrors(getIn(prevState.errors, name)) : undefined;\n        var fieldTouched = alterTouched ? updateTouched(getIn(prevState.touched, name)) : undefined;\n\n        if (isEmptyArray(fieldError)) {\n          fieldError = undefined;\n        }\n\n        if (isEmptyArray(fieldTouched)) {\n          fieldTouched = undefined;\n        }\n\n        return _extends({}, prevState, {\n          values: values,\n          errors: alterErrors ? setIn(prevState.errors, name, fieldError) : prevState.errors,\n          touched: alterTouched ? setIn(prevState.touched, name, fieldTouched) : prevState.touched\n        });\n      });\n    };\n\n    _this.push = function (value) {\n      return _this.updateArrayField(function (arrayLike) {\n        return [].concat(copyArrayLike(arrayLike), [cloneDeep(value)]);\n      }, false, false);\n    };\n\n    _this.handlePush = function (value) {\n      return function () {\n        return _this.push(value);\n      };\n    };\n\n    _this.swap = function (indexA, indexB) {\n      return _this.updateArrayField(function (array) {\n        return swap(array, indexA, indexB);\n      }, true, true);\n    };\n\n    _this.handleSwap = function (indexA, indexB) {\n      return function () {\n        return _this.swap(indexA, indexB);\n      };\n    };\n\n    _this.move = function (from, to) {\n      return _this.updateArrayField(function (array) {\n        return move(array, from, to);\n      }, true, true);\n    };\n\n    _this.handleMove = function (from, to) {\n      return function () {\n        return _this.move(from, to);\n      };\n    };\n\n    _this.insert = function (index, value) {\n      return _this.updateArrayField(function (array) {\n        return insert(array, index, value);\n      }, function (array) {\n        return insert(array, index, null);\n      }, function (array) {\n        return insert(array, index, null);\n      });\n    };\n\n    _this.handleInsert = function (index, value) {\n      return function () {\n        return _this.insert(index, value);\n      };\n    };\n\n    _this.replace = function (index, value) {\n      return _this.updateArrayField(function (array) {\n        return replace(array, index, value);\n      }, false, false);\n    };\n\n    _this.handleReplace = function (index, value) {\n      return function () {\n        return _this.replace(index, value);\n      };\n    };\n\n    _this.unshift = function (value) {\n      var length = -1;\n\n      _this.updateArrayField(function (array) {\n        var arr = array ? [value].concat(array) : [value];\n        length = arr.length;\n        return arr;\n      }, function (array) {\n        return array ? [null].concat(array) : [null];\n      }, function (array) {\n        return array ? [null].concat(array) : [null];\n      });\n\n      return length;\n    };\n\n    _this.handleUnshift = function (value) {\n      return function () {\n        return _this.unshift(value);\n      };\n    };\n\n    _this.handleRemove = function (index) {\n      return function () {\n        return _this.remove(index);\n      };\n    };\n\n    _this.handlePop = function () {\n      return function () {\n        return _this.pop();\n      };\n    };\n\n    _this.remove = _this.remove.bind(_assertThisInitialized(_this));\n    _this.pop = _this.pop.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = FieldArrayInner.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.validateOnChange && this.props.formik.validateOnChange && !isEqual(getIn(prevProps.formik.values, prevProps.name), getIn(this.props.formik.values, this.props.name))) {\n      this.props.formik.validateForm(this.props.formik.values);\n    }\n  };\n\n  _proto.remove = function remove(index) {\n    // We need to make sure we also remove relevant pieces of `touched` and `errors`\n    var result;\n    this.updateArrayField( // so this gets call 3 times\n    function (array) {\n      var copy = array ? copyArrayLike(array) : [];\n\n      if (!result) {\n        result = copy[index];\n      }\n\n      if (isFunction(copy.splice)) {\n        copy.splice(index, 1);\n      } // if the array only includes undefined values we have to return an empty array\n\n\n      return isFunction(copy.every) ? copy.every(function (v) {\n        return v === undefined;\n      }) ? [] : copy : copy;\n    }, true, true);\n    return result;\n  };\n\n  _proto.pop = function pop() {\n    // Remove relevant pieces of `touched` and `errors` too!\n    var result;\n    this.updateArrayField( // so this gets call 3 times\n    function (array) {\n      var tmp = array.slice();\n\n      if (!result) {\n        result = tmp && tmp.pop && tmp.pop();\n      }\n\n      return tmp;\n    }, true, true);\n    return result;\n  };\n\n  _proto.render = function render() {\n    var arrayHelpers = {\n      push: this.push,\n      pop: this.pop,\n      swap: this.swap,\n      move: this.move,\n      insert: this.insert,\n      replace: this.replace,\n      unshift: this.unshift,\n      remove: this.remove,\n      handlePush: this.handlePush,\n      handlePop: this.handlePop,\n      handleSwap: this.handleSwap,\n      handleMove: this.handleMove,\n      handleInsert: this.handleInsert,\n      handleReplace: this.handleReplace,\n      handleUnshift: this.handleUnshift,\n      handleRemove: this.handleRemove\n    };\n\n    var _this$props2 = this.props,\n        component = _this$props2.component,\n        render = _this$props2.render,\n        children = _this$props2.children,\n        name = _this$props2.name,\n        _this$props2$formik = _this$props2.formik,\n        restOfFormik = _objectWithoutPropertiesLoose(_this$props2$formik, [\"validate\", \"validationSchema\"]);\n\n    var props = _extends({}, arrayHelpers, {\n      form: restOfFormik,\n      name: name\n    });\n\n    return component ? createElement(component, props) : render ? render(props) : children // children come last, always called\n    ? typeof children === 'function' ? children(props) : !isEmptyChildren(children) ? Children.only(children) : null : null;\n  };\n\n  return FieldArrayInner;\n}(Component);\n\nFieldArrayInner.defaultProps = {\n  validateOnChange: true\n};\nvar FieldArray = /*#__PURE__*/connect(FieldArrayInner);\n\nvar ErrorMessageImpl = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(ErrorMessageImpl, _React$Component);\n\n  function ErrorMessageImpl() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ErrorMessageImpl.prototype;\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(props) {\n    if (getIn(this.props.formik.errors, this.props.name) !== getIn(props.formik.errors, this.props.name) || getIn(this.props.formik.touched, this.props.name) !== getIn(props.formik.touched, this.props.name) || Object.keys(this.props).length !== Object.keys(props).length) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        component = _this$props.component,\n        formik = _this$props.formik,\n        render = _this$props.render,\n        children = _this$props.children,\n        name = _this$props.name,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"formik\", \"render\", \"children\", \"name\"]);\n\n    var touch = getIn(formik.touched, name);\n    var error = getIn(formik.errors, name);\n    return !!touch && !!error ? render ? isFunction(render) ? render(error) : null : children ? isFunction(children) ? children(error) : null : component ? createElement(component, rest, error) : error : null;\n  };\n\n  return ErrorMessageImpl;\n}(Component);\n\nvar ErrorMessage = /*#__PURE__*/connect(ErrorMessageImpl);\n\n/**\r\n * Custom Field component for quickly hooking into Formik\r\n * context and wiring up forms.\r\n */\n\nvar FastFieldInner = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(FastFieldInner, _React$Component);\n\n  function FastFieldInner(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    var render = props.render,\n        children = props.children,\n        component = props.component,\n        is = props.as,\n        name = props.name;\n    !!render ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<FastField render> has been deprecated. Please use a child callback function instead: <FastField name={\" + name + \"}>{props => ...}</FastField> instead.\") : invariant(false) : void 0;\n    !!(component && render) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You should not use <FastField component> and <FastField render> in the same <FastField> component; <FastField component> will be ignored') : invariant(false) : void 0;\n    !!(is && children && isFunction(children)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You should not use <FastField as> and <FastField children> as a function in the same <FastField> component; <FastField as> will be ignored.') : invariant(false) : void 0;\n    !!(component && children && isFunction(children)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You should not use <FastField component> and <FastField children> as a function in the same <FastField> component; <FastField component> will be ignored.') : invariant(false) : void 0;\n    !!(render && children && !isEmptyChildren(children)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You should not use <FastField render> and <FastField children> in the same <FastField> component; <FastField children> will be ignored') : invariant(false) : void 0;\n    return _this;\n  }\n\n  var _proto = FastFieldInner.prototype;\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(props) {\n    if (this.props.shouldUpdate) {\n      return this.props.shouldUpdate(props, this.props);\n    } else if (props.name !== this.props.name || getIn(props.formik.values, this.props.name) !== getIn(this.props.formik.values, this.props.name) || getIn(props.formik.errors, this.props.name) !== getIn(this.props.formik.errors, this.props.name) || getIn(props.formik.touched, this.props.name) !== getIn(this.props.formik.touched, this.props.name) || Object.keys(this.props).length !== Object.keys(props).length || props.formik.isSubmitting !== this.props.formik.isSubmitting) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    // Register the Field with the parent Formik. Parent will cycle through\n    // registered Field's validate fns right prior to submit\n    this.props.formik.registerField(this.props.name, {\n      validate: this.props.validate\n    });\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.name !== prevProps.name) {\n      this.props.formik.unregisterField(prevProps.name);\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate\n      });\n    }\n\n    if (this.props.validate !== prevProps.validate) {\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.props.formik.unregisterField(this.props.name);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        name = _this$props.name,\n        render = _this$props.render,\n        is = _this$props.as,\n        children = _this$props.children,\n        component = _this$props.component,\n        formik = _this$props.formik,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"validate\", \"name\", \"render\", \"as\", \"children\", \"component\", \"shouldUpdate\", \"formik\"]);\n\n    var restOfFormik = _objectWithoutPropertiesLoose(formik, [\"validate\", \"validationSchema\"]);\n\n    var field = formik.getFieldProps(_extends({\n      name: name\n    }, props));\n    var meta = {\n      value: getIn(formik.values, name),\n      error: getIn(formik.errors, name),\n      touched: !!getIn(formik.touched, name),\n      initialValue: getIn(formik.initialValues, name),\n      initialTouched: !!getIn(formik.initialTouched, name),\n      initialError: getIn(formik.initialErrors, name)\n    };\n    var bag = {\n      field: field,\n      meta: meta,\n      form: restOfFormik\n    };\n\n    if (render) {\n      return render(bag);\n    }\n\n    if (isFunction(children)) {\n      return children(bag);\n    }\n\n    if (component) {\n      // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n      if (typeof component === 'string') {\n        var innerRef = props.innerRef,\n            rest = _objectWithoutPropertiesLoose(props, [\"innerRef\"]);\n\n        return createElement(component, _extends({\n          ref: innerRef\n        }, field, rest), children);\n      } // We don't pass `meta` for backwards compat\n\n\n      return createElement(component, _extends({\n        field: field,\n        form: formik\n      }, props), children);\n    } // default to input here so we can check for both `as` and `children` above\n\n\n    var asElement = is || 'input';\n\n    if (typeof asElement === 'string') {\n      var _innerRef = props.innerRef,\n          _rest = _objectWithoutPropertiesLoose(props, [\"innerRef\"]);\n\n      return createElement(asElement, _extends({\n        ref: _innerRef\n      }, field, _rest), children);\n    }\n\n    return createElement(asElement, _extends({}, field, props), children);\n  };\n\n  return FastFieldInner;\n}(Component);\n\nvar FastField = /*#__PURE__*/connect(FastFieldInner);\n\nexport { ErrorMessage, FastField, Field, FieldArray, Form, Formik, FormikConsumer, FormikContext, FormikProvider, connect, getActiveElement, getIn, insert, isEmptyArray, isEmptyChildren, isFunction, isInputEvent, isInteger, isNaN$1 as isNaN, isObject, isPromise, isString, move, prepareDataForValidation, replace, setIn, setNestedObjectValues, swap, useField, useFormik, useFormikContext, validateYupSchema, withFormik, yupToFormErrors };\n//# sourceMappingURL=formik.esm.js.map\n"],"names":["_extends","target","i","source","key","_objectWithoutPropertiesLoose","excluded","sourceKeys","FormikContext","useFormikContext","formik","useContext","isFunction","obj","isObject","isInteger","isString","isPromise","value","getIn","def","p","path","toPath","setIn","res","clone","resVal","pathArray","currentPath","currentObj","nextPath","setNestedObjectValues","object","visited","response","_i","_Object$keys","k","val","formikReducer","state","msg","isEqual","emptyErrors","emptyTouched","useFormik","_ref","_ref$validateOnChange","validateOnChange","_ref$validateOnBlur","validateOnBlur","_ref$validateOnMount","validateOnMount","isInitialValid","_ref$enableReinitiali","enableReinitialize","onSubmit","rest","props","initialValues","useRef","initialErrors","initialTouched","initialStatus","isMounted","fieldRegistry","useEffect","_React$useState","useState","setIteration","stateRef","cloneDeep","dispatch","useCallback","action","prev","x","runValidateHandler","values","field","resolve","reject","maybePromisedErrors","errors","actualException","runValidationSchema","validationSchema","schema","promise","validateYupSchema","err","yupToFormErrors","runSingleFieldLevelValidation","runFieldLevelValidations","fieldKeysWithValidation","f","fieldValidations","fieldErrorsList","curr","index","runAllValidations","_ref2","fieldErrors","schemaErrors","validateErrors","combinedErrors","deepmerge","arrayMerge","validateFormWithHighPriority","useEventCallback","resetForm","nextState","touched","status","dispatchFn","maybePromisedOnReset","imperativeMethods","validateField","name","maybePromise","error","registerField","_ref3","validate","unregisterField","setTouched","shouldValidate","willValidate","setErrors","setValues","resolvedValues","setFieldError","setFieldValue","executeChange","eventOrTextValue","maybePath","parsed","type","id","checked","outerHTML","options","multiple","getValueForCheckbox","getSelectedValues","handleChange","eventOrPath","event","setFieldTouched","executeBlur","e","_e$target","handleBlur","eventOrString","setFormikState","stateOrCb","setStatus","setSubmitting","isSubmitting","submitForm","isInstanceOfError","isActuallyValid","promiseOrUndefined","executeSubmit","result","_errors","handleSubmit","reason","handleReset","getFieldMeta","getFieldHelpers","getFieldProps","nameOrOptions","isAnObject","valueState","valueProp","is","dirty","useMemo","isValid","ctx","yupError","_iterator","_isArray","_ref5","sync","context","normalizedValues","prepareDataForValidation","data","isPlainObject","destination","cloneRequested","shouldClone","el","currentValue","currentArrayOfValues","isValueInArray","useIsomorphicLayoutEffect","useLayoutEffect","fn","ref","_len","args","_key","Form","forwardRef","_action","_useFormikContext","createElement"],"mappings":"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","x_google_ignoreList":[0]}