{"version":3,"file":"UserEditProfilePage-LsDnwLty.js","sources":["../../src/components/User/UserAccountMenu.tsx","../../src/services/api/userEditProfile.ts","../../src/pages/User/UserEditProfilePage.tsx"],"sourcesContent":["import { Button, ButtonGroup } from \"flowbite-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HiAdjustments, HiUserCircle } from \"react-icons/hi\";\r\n\r\nexport default function UserProfileMenu() {\r\n    return (\r\n        <>\r\n            <ButtonGroup className=\"flex justify-center items-center mr-5 sm:mr-0 sm:my-40\" outline={false} pill={false}>\r\n                <Button color=\"gray\" className=\"sm:w-96 bg-blue-700 text-white\" disabled>\r\n                    <HiUserCircle className=\"mr-3 h-4 w-4\" />\r\n                        À propos de vous\r\n                </Button>\r\n                <Link to=\"/my-account\">\r\n                    <Button color=\"gray\" className=\"sm:w-96 -z-10\">\r\n                        <HiAdjustments className=\"mr-3 h-4 w-4\" />\r\n                            Mon compte\r\n                    </Button>\r\n                </Link>\r\n            </ButtonGroup>\r\n        </>\r\n    )\r\n}","import fakeProfile from '../../pages/User/profileFaker';\r\n\r\nexport async function getProfiles() {\r\n    try {\r\n        return fakeProfile;\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}","import { Button, Card, Checkbox, Label, TextInput } from \"flowbite-react\";\r\nimport { IoIosSend } from \"react-icons/io\";\r\nimport { ProfileInterface } from \"../../services/interfaces/Profile\";\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useParams } from \"react-router-dom\";\r\nimport UserAccountMenu from \"../../components/User/UserAccountMenu\";\r\nimport { getProfiles } from \"../../services/api/userEditProfile\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\ninterface ProfileProp {\r\n    handleSubmitProfile: (contactForm: ProfileInterface) => void;\r\n}\r\n\r\nexport default function UserEditProfilePage(props: ProfileProp) {\r\n\r\n    const { idProfile } = useParams();\r\n    const [ profiles, setProfiles ] = useState<ProfileInterface | null>(null);\r\n\r\n    useEffect(() => {\r\n        const loadProfiles = async () => {\r\n            const listProfile = await getProfiles();\r\n\r\n            if (listProfile) {\r\n                const selectedprofile = listProfile.find(profile => profile.id.toString() === idProfile);\r\n                setProfiles(selectedprofile ? {\r\n                    ...selectedprofile,\r\n                } : null);\r\n            }\r\n            \r\n        };\r\n        loadProfiles();\r\n    }, [idProfile]);\r\n\r\n    const initialValues: ProfileInterface = {\r\n        id: 0,\r\n        file: \"\",\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        password: \"\",\r\n        birthDate: null,\r\n        email: \"\",\r\n        phone: \"\",\r\n    };\r\n    \r\n    if (profiles) {\r\n        initialValues.file = profiles.file;\r\n        initialValues.firstname = profiles.firstname;\r\n        initialValues.lastname = profiles.lastname;\r\n        initialValues.password = profiles.password;\r\n        initialValues.birthDate = profiles.birthDate;\r\n        initialValues.email = profiles.email;\r\n        initialValues.phone = profiles.phone;\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        validationSchema: Yup.object({\r\n            file: Yup.string()\r\n                            .min(3, \"minimum 3 caractères\")\r\n                            .max(25, \"maximum 25 caractères\"),\r\n            firstname: Yup.string()\r\n                            .min(3, \"minimum 3 caractères\")\r\n                            .max(25, \"maximum 25 caractères\"),\r\n            lastname: Yup.string()\r\n                            .min(3, \"minimum 3 caractères\")\r\n                            .max(25, \"maximum 25 caractères\"),\r\n            password: Yup.string()\r\n                            .min(3, \"minimum 3 caractères\"),\r\n            email: Yup.string()\r\n                            .email(),\r\n            phone: Yup.string()\r\n                            .min(3, \"minimum 10 caractères\"),\r\n        }),\r\n        onSubmit: (values) => {\r\n            const parsedValues: ProfileInterface = {\r\n                ...profiles,\r\n                ...values,\r\n                birthDate: values.birthDate ? new Date(values.birthDate) : null,\r\n                id: profiles?.id ?? 0\r\n            };\r\n\r\n            handleSubmitProfile(parsedValues);\r\n\r\n            formik.resetForm();\r\n            alert('Votre profil a bien été mis à jour!');\r\n        },\r\n    });\r\n\r\n    const birthDateString: string | undefined = profiles?.birthDate ? profiles.birthDate.toISOString().substr(0, 10) : undefined;\r\n\r\n    const handleSubmitProfile = (values: ProfileInterface): void => {\r\n        if (profiles) {\r\n            const updatedProfile: ProfileInterface = {\r\n                ...profiles,\r\n                ...values,\r\n                id: profiles.id\r\n            };\r\n            props.handleSubmitProfile(updatedProfile);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <UserAccountMenu />\r\n            {\r\n                !profiles ? (\r\n                    <p className='font-bodyTest text-2xl my-32 italic text-orange-500'>Aucun profil n'existe avec l'id: {idProfile}</p>\r\n                ) : (\r\n                    <>\r\n                        <div className=\"flex justify-center items-center font-bodyTest scale-110 sm:scale:100 mt-20 sm:mt-15\">\r\n                            <Card className=\"w-96 bg-gray-50 shadow-lg m-8\">\r\n                                <form onSubmit={formik.handleSubmit}>\r\n                                \r\n                                    <input\r\n                                        type=\"file\"\r\n                                        id=\"picture\"\r\n                                        name=\"picture\"\r\n                                        className=\"mb-2 max-w-xs break-words\"\r\n                                        onChange={formik.handleChange}\r\n                                        value={ formik.values.file }\r\n                                    />\r\n                                    <br />\r\n                        \r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <Checkbox id=\"publicPicture\" />\r\n                                        <Label htmlFor=\"publicPicture\">public</Label>\r\n                                    </div>\r\n                                    <br />\r\n                                \r\n                                    <TextInput\r\n                                        id=\"firstname\"\r\n                                        type=\"text\"\r\n                                        name=\"firstname\"\r\n                                        className=\"mb-2\"\r\n                                        onChange={formik.handleChange}\r\n                                        value={formik.values.firstname !== \"\" ? formik.values.firstname : profiles?.firstname}\r\n                                        helperText={\r\n                                            <>\r\n                                            <span className=\"font-medium\">{formik.errors.firstname}</span>\r\n                                            </>\r\n                                        }\r\n                                    />\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <Checkbox id=\"publicFirstname\" />\r\n                                        <Label htmlFor=\"publicFirstname\">public</Label>\r\n                                    </div>\r\n                                    <br />\r\n                                \r\n                                    <TextInput\r\n                                        id=\"lastname\"\r\n                                        type=\"text\"\r\n                                        name=\"lastname\"\r\n                                        className=\"mb-2\"\r\n                                        onChange={formik.handleChange}\r\n                                        value={formik.values.lastname !== \"\" ? formik.values.lastname : profiles?.lastname}\r\n                                        helperText={\r\n                                            <>\r\n                                            <span className=\"font-medium\">{formik.errors.lastname}</span>\r\n                                            </>\r\n                                        }\r\n                                    />\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <Checkbox id=\"publicLastname\" />\r\n                                        <Label htmlFor=\"publicLastname\">public</Label>\r\n                                    </div>\r\n                                    <br />\r\n                        \r\n                                    <TextInput\r\n                                        id=\"password\"\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        className=\"mb-2\"\r\n                                        onChange={formik.handleChange}\r\n                                        value={formik.values.password !== \"\" ? formik.values.password : profiles?.password}\r\n                                        helperText={\r\n                                            <>\r\n                                            <span className=\"font-medium\">{formik.errors.password}</span>\r\n                                            </>\r\n                                        }\r\n                                    />\r\n                                    <br />\r\n                        \r\n                                    <TextInput\r\n                                        id=\"birthDate\"\r\n                                        type=\"date\"\r\n                                        name=\"birthDate\"\r\n                                        className=\"mb-2\"\r\n                                        onChange={formik.handleChange}\r\n                                        value={birthDateString}\r\n                                        disabled\r\n                                        helperText={\r\n                                            <>\r\n                                            <span className=\"font-medium\">{formik.errors.birthDate}</span>\r\n                                            </>\r\n                                        }\r\n                                    />\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <Checkbox id=\"publicBirthDate\" />\r\n                                        <Label htmlFor=\"publicBirthDate\">public</Label>\r\n                                    </div>\r\n                                    <br />\r\n                                \r\n                                    <TextInput\r\n                                        id=\"email\"\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        className=\"mb-2\"\r\n                                        onChange={formik.handleChange}\r\n                                        value={formik.values.email !== \"\" ? formik.values.email : profiles?.email}\r\n                                        helperText={\r\n                                            <>\r\n                                            <span className=\"font-medium\">{formik.errors.email}</span>\r\n                                            </>\r\n                                        }\r\n                                    />\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <Checkbox id=\"publicEmail\" />\r\n                                        <Label htmlFor=\"publicEmail\">public</Label>\r\n                                    </div>\r\n                                    <br />\r\n                        \r\n                                    <TextInput\r\n                                        id=\"phone\"\r\n                                        type=\"text\"\r\n                                        name=\"phone\"\r\n                                        className=\"mb-2\"\r\n                                        onChange={formik.handleChange}\r\n                                        value={formik.values.phone !== \"\" ? formik.values.phone : profiles?.phone}\r\n                                        helperText={\r\n                                            <>\r\n                                            <span className=\"font-medium\">{formik.errors.phone}</span>\r\n                                            </>\r\n                                        }\r\n                                    />\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <Checkbox id=\"publicPhone\" />\r\n                                        <Label htmlFor=\"publicPhone\">public</Label>\r\n                                    </div>\r\n                                    <br />\r\n                                    <span className='before:block before:absolute before:-inset-1 before:-skew-y-3 before:bg-blue-700 relative flex gap-2 p-1 mt-2 flex justify-center items-center'>\r\n                                        <Button className=\"bg-blue-700\">\r\n                                        <span className=\"relative text-white m-1\">Actualiser</span> <span>\r\n                                            <IoIosSend className=\"relative text-white h-5 w-5\" />\r\n                                        </span>\r\n                                        </Button>\r\n                                        \r\n                                    </span>\r\n                                </form>\r\n                            </Card>\r\n                        </div>\r\n                    </>\r\n                )\r\n            }\r\n\r\n        </>\r\n    )\r\n}"],"names":["UserProfileMenu","jsx","Fragment","ButtonGroup","jsxs","Button","HiUserCircle","Link","HiAdjustments","getProfiles","fakeProfile","error","UserEditProfilePage","props","idProfile","useParams","profiles","setProfiles","useState","useEffect","listProfile","selectedprofile","profile","initialValues","formik","useFormik","Yup.object","Yup.string","values","parsedValues","handleSubmitProfile","birthDateString","updatedProfile","UserAccountMenu","Card","Checkbox","Label","TextInput","IoIosSend"],"mappings":"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"}